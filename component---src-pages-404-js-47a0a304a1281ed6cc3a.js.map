{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_bootstrap__WEBPACK_IMPORTED_MODULE_1__","typography_theme_bootstrap__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","Bootstrap","SmallTitle","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","target","name","styles","BigTitle","TitleLink","Link","Wrapper","Layout","header","_this$props","children","pathname","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","to","Date","getFullYear","href","SEO","_ref","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"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","file":"component---src-pages-404-js-47a0a304a1281ed6cc3a.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\nimport Bootstrap from \"typography-theme-bootstrap\"\n\nconst typography = new Typography(Bootstrap)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\nimport styled from \"@emotion/styled\"\n\nconst SmallTitle = styled.h3`\n  margin-top: 0;\n`\n\nconst BigTitle = styled.h3`\n  ${scale(1.5)};\n  margin-bottom: ${rhythm(1.5)};\n  margin-top: 0;\n`\n\nconst TitleLink = styled(Link)`\n  box-shadow: none;\n  text-decoration: none;\n  color: inherit;\n`\n\nconst Wrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: ${rhythm(24)};\n  padding: ${rhythm(1.5)} ${rhythm(3 / 4)};\n`\n\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <BigTitle>\n          <TitleLink to={`/`}>\n            {title}\n          </TitleLink>\n        </BigTitle>\n      )\n    } else {\n      header = (\n        <SmallTitle>\n          <TitleLink to={`/`}>\n            {title}\n          </TitleLink>\n        </SmallTitle>\n      )\n    }\n    return (\n      <Wrapper>\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </Wrapper>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n              name: `keywords`,\n              content: keywords.join(`, `),\n            }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `cs`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}